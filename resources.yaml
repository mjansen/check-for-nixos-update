AWSTemplateFormatVersion: "2010-09-09"

Resources:

  MyBucket:
    Type: AWS::S3::Bucket

  MyRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
      Policies:
        - PolicyName: "AccessToConfigInS3"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action: "s3:GetObject"
                Resource:
                  Fn::Join:
                    - ""
                    - - "arn:aws:s3:::"
                      - !Ref MyBucket
                      - "/config.yaml"
              - Effect: "Allow"
                Action: [ "s3:GetObject", "s3:PutObject" ]
                Resource: "arn:aws:s3:::*/lastRelease"
                Resource:
                  Fn::Join:
                    - ""
                    - - "arn:aws:s3:::"
                      - !Ref MyBucket
                      - "/lastRelease"

  MyFunction:
    Type: "AWS::Lambda::Function"
    Properties:
      Code:
        S3Bucket: !Ref MyBucket
        S3Key: 'VERSION.zip'
      Description: "Check the current NIXOS Release for a given version and update an S3 file"
      Handler: check_for_nixos_update.my_handler
      Environment:
        Variables:
          "BUCKET_NAME": !Ref MyBucket
      MemorySize: 256
      Role:
       Fn::GetAtt:
         - "MyRole"
         - "Arn"
      Runtime: "python3.6"
      Timeout: 60

Outputs:
  NixosReleaseBucket:
    Value: !Ref MyBucket
    Description: "Bucket that stores the last seen nixos release"
